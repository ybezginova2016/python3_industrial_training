"""
Задача: дана бинарная строка длины N, состоящая только из нулей и единиц. Гарантируется,
что самый левый её элемент 0, а самый правый — 1. Найдите любое вхождение подстроки “01”.

РЕШЕНИЕ
Эту задачу можно решить перебором всех возможных подстрок, начинающихся с 0 и заканчивающихся 1,
и проверкой, содержится ли в них подстрока "01". Однако это решение будет неэффективным,
так как количество таких подстрок может достигать O(N^2).

Более оптимальное решение основано на использовании метода двух указателей. Мы будем
поддерживать два указателя i и j, которые будут указывать на первый элемент "0" и
последний элемент "1" в текущем фрагменте строки. Затем мы будем двигать указатель
j вправо до тех пор, пока он не будет указывать на следующий элемент "1". Если в
процессе этого j встретится с элементом "0", мы можем считать, что мы нашли
искомую подстроку "01". Если же j достигнет конца строки и элемент "0" не встретится,
то мы переместим указатель i на следующий элемент "0" и повторим процесс.

В результате мы будем двигаться по строке только один раз, что дает
нам линейную сложность алгоритма.
"""
def find_01(s):
    i, j = 0, 0
    while j < len(s):
        if s[j] == '1':
            if s[j-1] == '0':
                return j-1
            i = j
        j += 1
    return -1

s = "0000101010101"
index = find_01(s)
print(index)
